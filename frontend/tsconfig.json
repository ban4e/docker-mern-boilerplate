{
    "compilerOptions": {
        "outDir": "./dist",
        "module": "es6", // commonjs. Определяет тип импорта кода в итоговом файле, прописанном в "outFile". Необходимо задавать при использовании опции "outFile".
        "target": "es5", // Тип кода создаваемого итогового файла.
        "lib": [ // Набор библиотечных файлов полифилов, которые будут включены в итоговый выходной файл.
            "es6",
            "dom"
        ],
        "sourceMap": true, // Создавать ли соответствующие source map файлы ".map"?
        "allowJs": true, // Разрешать компилировать файлы с JavaScript-кодом?
        "allowSyntheticDefaultImports": true, // Разрешить импортировать модули не имеющие внутри себя "import default"?
        "jsx": "react-jsx", // Включать ли поддержку ".tsx" файлов?
        "moduleResolution": "node", // Определить способ поиска модулей в папках: как в Node.js или классический, как в TypeScript 1.5 и ниже.
        "rootDir": "src", // Путь до папки с которой надо начинать поиск входных файлов. Обычно корневая директория вычисляется по списку входных файлов. Данная опция необходима для проверки, что все найденные TypeScript-файлы находятся внутри корневой папки.
        "noImplicitReturns": false, // Сообщить об ошибке, когда не все пути кода в функции возвращают значение? if(){} is missing an else{} block
        "noImplicitThis": true, // Показывать ошибку на "this", если где-то задан тип "any".
        "noImplicitAny": true, // Показывать ошибку, если где-то задан тип "any".
        "strictNullChecks": true, // Значения "null" и "undefined" могут быть присвоены только значениям данного типа и значениям только с типом "any"?
        "pretty": true, // Окрашивать в терминале сообщения об ошибках.
        "paths": {
            "~/*": [
                "./src/*"
            ]
        },
    },
    "exclude": [
        // Секция "exclude" позволяет исключить при компиляции определенные файлы, которые находятся в заданных папках секции "include" или в папках всего проекта, если секция "include" не задана.
        // Компилятор не будет учитывать перечисленные в секции "exclude" файлы TypeScript, которые находятся в папках из секции "include".
        // Однако файлы, заданные в секции "files" будут обязательно скомпилированы.
        // Если секция "exclude" не указана, то по умолчанию будут исключаться из компиляции все файлы из папок:
        // - node_modules,
        // - bower_components,
        // - jspm_packages,
        // - файлы из папки, указанной в опции компилятора "outDir".
        "node_modules",
        "dist",
        "scripts",
        "acceptance-tests",
        "webpack",
        "jest",
        "src/setupTests.ts"
    ],
    "include": [
        // Секция "include" позволяет скомпилировать все файлы, находящиеся в заданных папках.
        // Если секция "files" и секция "include" заданы вместе, то будут скомпилированы только файлы, перечисленные в обеих секциях.
        // Все файлы, на которые есть ссылки во включенных файлах из секции "files" и секции "include", также скомпилируются.
        "src/**/*",
        "declarations/*.d.ts"
    ],
    "types": [
        "typePatches"
    ]
}